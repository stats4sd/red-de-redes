mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station) %>%
#filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
selected_station <- "4"
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label) %>%
select(-c(1,4))
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label) %>%
select(-c(1,4))
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = fecha)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label) %>%
select(-c(1,4))
stations_table <- tbl(con, "stations") %>%
select(1,3) %>%
collect()
Encoding(stations_table$label) <- "UTF-8"
stations_table$id <- as.character(stations_table$id)
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label) %>%
select(-c(1,4))
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
mutate(station=label)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = fecha)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = id)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = station_id)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
data$data_na <- is.na(data$station)
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = data_na)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
selected_aggregation <- "daily_data"
selected_station <- "4"
selected_start_year <- "2010"
selected_end_year <- "2020"
stations_table <- tbl(con, "stations") %>%
select(1,3) %>%
collect()
Encoding(stations_table$label) <- "UTF-8"
stations_table$id <- as.character(stations_table$id)
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data$data_na <- is.na(data$station)
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = data_na)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
stations_table <- tbl(con, "stations") %>%
select(1,3) %>%
collect()
Encoding(stations_table$label) <- "UTF-8"
stations_table$id <- as.character(stations_table$id)
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id==selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data$data_na <- is.na(data$station)
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = data_na)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
ata <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
filter(station_id%in%selected_station & year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
mutate(station_id=as.character(data$station_id),
fecha=as.Date(data$fecha)) %>%
left_join(stations_table, by=c("station_id"="id")) %>%
rename(station=label)
data$data_na <- is.na(data$station)
#png(filename="inventario.png", width = 1000, height = 500, units = "px")
data %>%
ggplot(aes(x = fecha, y = station, fill = data_na)) +
geom_raster(alpha = 0.9) +
scale_fill_manual(name = "", values = c("#556FBF", "darkgray"), labels = c("Presente", "Faltante")) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x = "Año", y = "Estaciones", title = "Inventario de datos") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle=0)) +
theme(legend.position = "bottom")
selected_variable_type <- temperature_interna
selected_variable_type <- "temperature_interna"
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", c(max_temperatura_interna, min_temperatura_interna, avg_temperatura_interna), NA)
selected_variable_type <- "temperatura_interna"
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", c(max_temperatura_interna, min_temperatura_interna, avg_temperatura_interna), NA)
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", c("max_temperatura_interna", "min_temperatura_interna", "avg_temperatura_interna"), NA)
selected_variables
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", as.list("max_temperatura_interna", "min_temperatura_interna", "avg_temperatura_interna")[[1]], NA)
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", as.list("max_temperatura_interna", "min_temperatura_interna", "avg_temperatura_interna")[[1]]), NA)
View(data)
selected_variable <- "fech"
data <- data %>%
select(grepl(selected_variable, colnames(data)))
data <- data %>%
select(one_of(selected_variable))
selected_variable <- "fecha"
data <- data %>%
select(one_of(selected_variable))
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
selected_variable <- "fecha"
data <- data %>%
select(one_of(selected_variable))
View(data)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
selected_variable <- c("fecha", "staion_id")
data <- data %>%
select(one_of(selected_variable))
selected_variable <- c("fecha", "station_id")
data <- data %>%
select(one_of(selected_variable))
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
data <- data %>%
select(one_of(selected_variable))
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
selected_variable <- c("fecha", "station_id")
data <- data %>%
select(all_of(selected_variable))
View(data)
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", c("max_temperatura_interna", "min_temperatura_interna", "avg_temperatura_interna"), NA)
selected_station <- "1,2,3,4"
selected_station <- as.vector(strsplit(selected_station, ","))
selected_station <- "1,2,3,4"
selected_station <- as.vector.factor(strsplit(selected_station, ","))
selected_station <- "1,2,3,4"
selected_stations <- as.list(strsplit(selected_station, ",")[[1]])
selected_station <- "fecha,station_id"
selected_stations <- as.list(strsplit(selected_station, ",")[[1]])
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- data %>%
select(all_of(selected_stations))
View(data)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
select(station_id, fecha, selected_variable) %>%
collect()
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year)
dotenv::load_dot_env("../../.env")
con <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("DB_DATABASE"),
host = Sys.getenv("DB_HOST"),
port = as.integer(Sys.getenv("DB_PORT")),
user = Sys.getenv("DB_USERNAME"),
password = Sys.getenv("DB_PASSWORD"),
)
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year)
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha, selected_variable) %>%
collect()
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha, selected_variable) %>%
collect()
selected_start_year <- "2010"
selected_end_year <- "2020"
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha, selected_variable) %>%
collect()
selected_variable <- c("fecha", "station_id")
data <- data %>%
select(all_of(selected_variable))
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha, selected_variable) %>%
collect()
selected_station <- "fecha,station_id"
selected_stations <- as.list(strsplit(selected_station, ",")[[1]])
data2 <- data %>%
select(all_of(unlist(selected_stations)))
View(data2)
data3 <- data %>%
select(all_of(selected_stations))
selected_stations <- as.vector(strsplit(selected_station, ",")[[1]])
selected_start_year <- "2010"
selected_end_year <- "2020"
con <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("DB_DATABASE"),
host = Sys.getenv("DB_HOST"),
port = as.integer(Sys.getenv("DB_PORT")),
user = Sys.getenv("DB_USERNAME"),
password = Sys.getenv("DB_PASSWORD"),
)
stations_table <- tbl(con, "stations") %>%
select(1,3) %>%
collect()
daily_met_data_table <- tbl(con, "daily_met_data")
data <- daily_met_data_table %>%
mutate(year=sql(YEAR(fecha))) %>%
#filter(station_id%in%selected_station) %>%
filter(year>=selected_start_year & year<=selected_end_year) %>%
#select(station_id, fecha, selected_variable) %>%
collect()
selected_station <- "fecha,station_id"
selected_stations <- as.vector(strsplit(selected_station, ",")[[1]])
data3 <- data %>%
select(all_of(selected_stations))
data4 <- data %>%
select(all_of(selected_stations))
selected_variable_type <- "temperatura_interna"
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", "max_temperatura_interna,min_temperatura_interna,avg_temperatura_interna",
ifelse(selected_variable_type=="temperatura_externa", "max_temperatura_externa,min_temperatura_externa,avg_temperatura_externa",
ifelse(selected_variable_type=="humedad_interna", "max_humedad_interna,min_humedad_interna,avg_humedad_interna",
ifelse(selected_variable_type=="humedad_externa", "max_humedad_externa,min_humedad_externa,avg_humedad_externa",
ifelse(selected_variable_type=="presion_relativa", "max_presion_relativa,min_presion_relativa,avg_presion_relativa",
ifelse(selected_variable_type=="presion_absoluta", "max_presion_absoluta,min_presion_absoluta,avg_presion_absoluta",
ifelse(selected_variable_type=="velocidad_viento", "max_velocidad_viento,min_velocidad_viento,avg_velocidad_viento",
ifelse(selected_variable_type=="sensacion_termica", "max_sensacion_termica,min_sensacion_termica,avg_sensacion_termica",
ifelse(selected_variable_type=="lluvia_24_hors_total","lluvia_24_hors_total",NA)))))))))
selected_variables <- as.vector(strsplit(selected_variables, ",")[[1]])
test <- data  %>% select(all_of(selected_variables))
View(test)
selected_variable_type <- "lluvia_24_hors_total"
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", "max_temperatura_interna,min_temperatura_interna,avg_temperatura_interna",
ifelse(selected_variable_type=="temperatura_externa", "max_temperatura_externa,min_temperatura_externa,avg_temperatura_externa",
ifelse(selected_variable_type=="humedad_interna", "max_humedad_interna,min_humedad_interna,avg_humedad_interna",
ifelse(selected_variable_type=="humedad_externa", "max_humedad_externa,min_humedad_externa,avg_humedad_externa",
ifelse(selected_variable_type=="presion_relativa", "max_presion_relativa,min_presion_relativa,avg_presion_relativa",
ifelse(selected_variable_type=="presion_absoluta", "max_presion_absoluta,min_presion_absoluta,avg_presion_absoluta",
ifelse(selected_variable_type=="velocidad_viento", "max_velocidad_viento,min_velocidad_viento,avg_velocidad_viento",
ifelse(selected_variable_type=="sensacion_termica", "max_sensacion_termica,min_sensacion_termica,avg_sensacion_termica",
ifelse(selected_variable_type=="lluvia_24_hors_total","lluvia_24_hors_total",NA)))))))))
selected_variables <- as.vector(strsplit(selected_variables, ",")[[1]])
test <- data  %>% select(all_of(selected_variables))
selected_variable_type <- "lluvia_24_horas_total"
selected_variables <- ifelse(selected_variable_type=="temperatura_interna", "max_temperatura_interna,min_temperatura_interna,avg_temperatura_interna",
ifelse(selected_variable_type=="temperatura_externa", "max_temperatura_externa,min_temperatura_externa,avg_temperatura_externa",
ifelse(selected_variable_type=="humedad_interna", "max_humedad_interna,min_humedad_interna,avg_humedad_interna",
ifelse(selected_variable_type=="humedad_externa", "max_humedad_externa,min_humedad_externa,avg_humedad_externa",
ifelse(selected_variable_type=="presion_relativa", "max_presion_relativa,min_presion_relativa,avg_presion_relativa",
ifelse(selected_variable_type=="presion_absoluta", "max_presion_absoluta,min_presion_absoluta,avg_presion_absoluta",
ifelse(selected_variable_type=="velocidad_viento", "max_velocidad_viento,min_velocidad_viento,avg_velocidad_viento",
ifelse(selected_variable_type=="sensacion_termica", "max_sensacion_termica,min_sensacion_termica,avg_sensacion_termica",
ifelse(selected_variable_type=="lluvia_24_horas_total","lluvia_24_horas_total",NA)))))))))
selected_variables <- as.vector(strsplit(selected_variables, ",")[[1]])
test <- data  %>% select(all_of(selected_variables))
